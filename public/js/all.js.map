{"version":3,"sources":["kathikonta.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["Vue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('value');\n\nVue.component('tasks', {\n    template: '#tasks-template',\n    props: ['list'],\n    created: function() {\n        this.fetchTasks();\n    },\n    methods: {\n        fetchTasks: function () {\n            this.$http.get('/api/list').then(function(tasks) {\n                this.$set('list', tasks.data);\n            })\n        },\n        toggleCompletedFor: function (task) {\n            var id = task.id;\n            task.done = ! task.done;\n            this.$http.patch('/api/check/'+id, task).then(function (task) {\n                console.log(task)\n                this.fetchTasks()\n            })\n        },\n        onDelete: function (task) {\n            var id = task.id;\n            this.$http.delete('api/delete/'+id).then(function (id) {\n                console.log(id)\n                this.fetchTasks()\n            }).catch(function (id) {\n                console.log(id)\n            });\n        }\n    },\n    events: {\n        'taskCreated': function () {\n            this.fetchTasks();\n        }\n    }\n});\n\nnew Vue({\n    el: 'body',\n    data: {\n        tasks: {\n            name: '',\n            user_id: ''\n        }\n    },\n    computed: {\n        errors: function() {\n            if ( ! this.tasks.name ) return true;\n            return false;\n        }\n    },\n    methods: {\n        onSubmitForm: function(e) {\n            e.preventDefault();\n            var name = this.tasks.name;\n            var user_id = this.tasks.user_id;\n            var task = { name: name, user_id: user_id }\n            this.tasks = { name: '', user_id: user_id };\n            this.$http.post('/api/create', task).then(function (task) {\n                console.log(task);\n                this.$broadcast('taskCreated');\n            }).catch(function (task) {\n                console.log(task);\n            });\n            $('#createModal').modal( 'hide' );\n        },\n        onEditForm: function (e) {\n            e.preventDefault()\n        }\n    }\n});\n\n$('#myModal').on('shown.bs.modal', function () {\n    $('#myInput').focus()\n})"],"sourceRoot":"/source/"}